{%- assign video_desktop_breakpoint = 480 -%}
{%- if section.settings.video == blank -%}
  {%- assign desktop_video = section.settings.video_file | default: section.settings.mobile_video_file -%}
  {%- assign mobile_video = section.settings.mobile_video_file | default: section.settings.video_file -%}
{%- endif -%}

{%- liquid
  assign heading_tag = 'h2'
  if section.settings.heading_h1
    assign heading_tag = 'h1'
  endif
-%}

{%- style -%}
  {%- if section.settings.height == 'responsive' -%}
    .video-container--responsive {
      height: auto;
      padding-bottom: 0;
      display: flex;
    }
    .video-container--responsive:before {
      content: "";
      width: 1px;
      margin-left: -1px;
      float: left;
      height: 0;
    }
    .video-container--responsive:after {
      content: "";
      display: table;
      clear: both;
    }
    {% comment %} Set video height constraints {% endcomment %}
    {%- if section.settings.video_max_height_mobile != blank -%}
      #section-id-{{ section.id }} .video-container {
        max-height: {{ section.settings.video_max_height_mobile }};
      }
    {%- endif -%}
    {%- if section.settings.video_max_height_desktop != blank -%}
      @media (min-width: 768px) {
        #section-id-{{ section.id }} .video-container {
          max-height: {{ section.settings.video_max_height_desktop }};
        }
      }
    {%- endif -%}
    #section-id-{{ section.id }} .video-container--responsive:before {
      padding-top: {{ 100.0 | divided_by: section.settings.video_aspect_ratio_mobile | times: 100.0 }}%;
    }

    @media (min-width: 768px) {
      #section-id-{{ section.id }} .video-container--responsive:before {
        padding-top: {{ 100.0 | divided_by: section.settings.video_aspect_ratio_desktop | times: 100.0 }}%;
      }
    }
    #section-id-{{ section.id }} .video-container--responsive .video-container__video {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
    }
    #section-id-{{ section.id }} .overlay-type {
      position: relative;
      width: 100%;
      padding: 20px;
    }
  {%- endif -%}
  .hero-video__reviews-banner {
    width: 100%;
    padding: 12px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 16px;
  }
  .hero-video__reviews-banner__stars {
    display: flex;
  }
  .hero-video__reviews-banner__stars svg {
    margin-right: 0.25em;
    width: 0.75em;
    height: 0.75em;
  }
  .hero-video__reviews-banner__text {
    margin-left: 0.5em;
    font-weight: 600;
    line-height: 1;
    white-space: nowrap;
    margin-top: -1px;
  }
  #section-id-{{ section.id }} .hero-video__reviews-banner {
    {%- if section.settings.reviews_banner_background_color != blank -%}
      background-color: {{ section.settings.reviews_banner_background_color | color_to_hex }};
    {%- endif -%}
    {%- if section.settings.reviews_banner_text_color != blank -%}
      color: {{ section.settings.reviews_banner_text_color | color_to_hex }};
    {%- endif -%}
  }
  #section-id-{{ section.id }} .hero-video__heading {
    color: {{ section.settings.heading_text_color | color_to_rgb }};
    font-size: {{ section.settings.title_size_mobile }}px;
  }
  #section-id-{{ section.id }} .hero-video__preheading {
    display: block;
    color: {{ section.settings.preheading_text_color | color_to_rgb }};
    font-size: {{ section.settings.preheading_size_mobile }}px;
    line-height: 1.25em;
  }
  @media (min-width: 768px) {
    #section-id-{{ section.id }} .hero-video__heading {
      font-size: {{ section.settings.title_size_desktop }}px;
    }
    #section-id-{{ section.id }} .hero-video__preheading {
      font-size: {{ section.settings.preheading_size_desktop }}px;
    }
  }

  {%- if section.settings.height == 'fixed' -%}
    #section-id-{{ section.id }} .video-container {
      height: {{ section.settings.height_mobile }}px;
    }
  {%- endif -%}
  @media (min-width: 768px) {
    {%- if section.settings.height == 'fixed' -%}
    #section-id-{{ section.id }} .video-container {
      height: {{ section.settings.height_desktop }}px;
    }
    {%- endif -%}
  }

  #section-id-{{ section.id }} .line-1 {
    font-size: {{ section.settings.title_size_mobile }}px;
  }
  @media (min-width: 768px) {
    #section-id-{{ section.id }} .line-1 {
      font-size: {{ section.settings.title_size_desktop }}px;
    }
  }
  #section-id-{{ section.id }} .line-2, #section-id-{{ section.id }} .rte {
    font-size: {{ section.settings.text_size_mobile }}px;
    max-width: {{ section.settings.text_max_width_mobile }}px;
  }
  @media (min-width: 768px) {
    #section-id-{{ section.id }} .line-2, #section-id-{{ section.id }} .rte {
      font-size: {{ section.settings.text_size_desktop }}px;
      max-width: {{ section.settings.text_max_width_desktop }}px;
    }
  }
  {% if section.settings.subheading_position == 'bottom' %}
    #section-id-{{ section.id }} .overlay__content > *:last-child {
      margin-bottom: 2rem;
    }
    .hero-video__footer {
      position: relative;
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    #section-id-{{ section.id }} .hero-video__footer {
      background-color: {{ section.settings.bottom_bg }};
    }
    #section-id-{{ section.id }} .hero-video__footer .button {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    #section-id-{{ section.id }} .hero-video__footer .rte {
      text-align: center;
    }
  {%- endif -%}
  .video-container__fallback-image,
  .video-container__poster-image
   {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .video-container__fallback-image.fade-in {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
  .video-container__fallback-image.fade-in.lazyloaded {
    opacity: 1;
  }
  .video--has-poster .video-container__fallback-image {
    display: none;
  }
  .video--has-poster.video--fallback .video-container__fallback-image {
    display: block;
  }
{%- endstyle -%}

<div
  id="section-id-{{ section.id }}"
  class="{% if section.sections.overlay_header %}header-overlap-section needs-alt-logo{% endif %}"
  data-section-type="background-video"
>
  {%- if section.settings.reviews_banner_text != blank -%}
    <div class="hero-video__reviews-banner">
      <div class="hero-video__reviews-banner__stars">
        {%- for i in (1..5) -%}
          <svg aria-hidden="true" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" role="img">
            <path d="m3.2 16.0001081c-.1687782 0-.33328968-.0531313-.47-.1521081-.24051968-.174488-.36451194-.4679107-.322-.762l.743-5.203-2.917-2.917c-.21191095-.21196521-.28756133-.52460199-.196-.81.09130759-.2851682.3345701-.49522345.63-.544l4.398-.734 2.218-4.435c.13744692-.27145241.41573373-.4426761.72-.443.3045618.00166772.58175678.1761261.715.45l2.123 4.362 4.498.801c.2933158.05211246.5333796.26289081.623.547.0898959.28455453.0135125.59548872-.198.806l-2.917 2.917.744 5.203c.042199.2957461-.0839008.5903645-.327.764-.2421349.1739598-.5609835.1986349-.827.064l-4.382-2.22-4.502 2.223c-.10996656.0547452-.23116004.0831081-.354.0831081z" fill="currentColor"></path>
          </svg>
        {%- endfor -%}
      </div>
      <div class="hero-video__reviews-banner__text">{{ section.settings.reviews_banner_text }}</div>
    </div>
  {%- endif -%}

  {%- if mobile_video == desktop_video -%}
    {%- assign same_video = true -%}
  {%- endif -%}
  {% if section.settings.video != blank or desktop_video != blank %}
    {% comment %}
      If a video file is present, we play it immediately in the script tag below.
      Otherwise, we let theme.js handle the video setup
    {% endcomment %}
    <div
      id="HeroVideoContainer-{{ section.id }}"
      class="height--{{ section.settings.height }} video-container video-container--background image-overlay{% if section.settings.overlay_style_tint %} image-overlay--bg-full{% endif %}{% if section.settings.height == 'responsive' %} video-container--responsive{% endif %}{% if desktop_video != blank %} video--has-poster{% endif %}"
      {%- if section.settings.video != blank -%}
        data-video-url="{{ section.settings.video | escape }}"
        data-video-autoplay="true"
        data-video-loop="true"
      {%- endif -%}
    >
      {% if section.settings.overlay_style_tint %}
        <div class="image-overlay__veil" data-cc-animate data-cc-animate-duration="1.5s"></div>
      {% endif %}

      {%- if desktop_video != blank -%}
        <picture>
          <source
            media="(max-width:{{ video_desktop_breakpoint | minus: 1 }}px)"
            srcset="{{ mobile_video.preview_image | image_url: width: 720 }}"
          >
          <img class="video-container__poster-image" src="{{ desktop_video.preview_image | image_url: width: 720 }}">
        </picture>
      {%- endif -%}
      <div class="video-container__video">
        {%- if desktop_video != blank -%}
          <div class="video-container__video-element">
            <video
              playsinline=""
              loop="loop"
              muted="muted"
              id="HeroVideo-{{ section.id }}"
            >
              {%- if same_video -%}
                {%- for source in desktop_video.sources -%}
                  <source type="{{ source.mime_type }}" src="{{ source.url }}">
                {%- endfor -%}
              {%- endif -%}
            </video>
          </div>
        {%- endif -%}
      </div>
      {%- if desktop_video != blank -%}
        <script>
          (function() {
            const container = document.getElementById('HeroVideoContainer-{{ section.id }}');
            const videoEl = document.getElementById('HeroVideo-{{ section.id }}');
            videoEl.addEventListener('playing', function () {
              container.classList.add('video--play-started');
            });
            function showVideoFallback() {
              container.classList.add('video--fallback');
              container.classList.remove('video--play-started');
            }
            function playVideo() {
              const autoplayResult = videoEl.play();
              if (autoplayResult) {
                autoplayResult.catch(function(autoplayError) {
                  showVideoFallback();
                });
              } else {
                setTimeout(function() {
                  if (videoEl.paused) {
                    showVideoFallback();
                  }
                }, 1000);
              }
              videoEl.autoplay = true;
            }
            {%- if same_video != true -%}
              const wideViewport = window.matchMedia('(min-width: {{ video_desktop_breakpoint }}px)');
              let isWideViewport;
              const videoSources = [
                {%- for source in desktop_video.sources -%}
                  {
                    "url": "{{ source.url }}",
                    "type": "{{ source.mime_type }}"
                  },
                {%- endfor -%}
              ];
              const mobileVideoSources = [
                {%- for source in mobile_video.sources -%}
                  {
                    "url": "{{ source.url }}",
                    "type": "{{ source.mime_type }}"
                  },
                {%- endfor -%}
              ];

              function resizeVideo() {
                if (isWideViewport === wideViewport.matches) {
                  return;
                }
                const sources = wideViewport.matches ? videoSources : mobileVideoSources;

                if (typeof isWideViewport === 'undefined') {
                  sources.forEach(function(s) {
                    var source = document.createElement('source');
                    source.src = s.url;
                    source.type = s.type;
                    videoEl.appendChild(source);
                  });
                } else {
                  const videoSrc = sources.find(function(src) {
                    return src.type === 'video/mp4'
                  });
                  if (videoSrc) {
                    videoEl.src = videoSrc.url;
                  }
                }
                isWideViewport = wideViewport.matches;
                playVideo();
              }
              wideViewport.addListener(resizeVideo);
              resizeVideo();
            {%- else -%}
              playVideo();
            {%- endif -%}
          })();
        </script>
      {%- endif -%}

      {% if section.settings.placeholder_image != blank %}
        <div
          class="video-container__fallback"
        >
          {%- liquid
            assign placeholder_image = section.settings.placeholder_image
            assign max_width = max_width | default: placeholder_image.width
            assign image_widths = '360,540,600,768,900,1080' | split: ','
            assign widths = ''
          -%}
          {%- capture image_widths -%}
              {%- for width in image_widths -%}
                {%- assign width_num = width | plus: 0 | round -%}
                {%- if width_num < max_width -%}
                  {{ placeholder_image | image_url: width: width_num }} {{ width_num }}w,
                {%- endif -%}
              {%- endfor -%}
            {%- endcapture -%}
          <img
            class="video-container__fallback-image lazyload fade-in"
            data-srcset="{{ image_widths }}"
            data-sizes="100vw"
            alt="{{ placeholder_image.alt | escape }}"
          >
        </div>
      {% endif %}

      {%- assign show_overlay_text = false -%}
      {%- if section.settings.title != blank
        or section.settings.subheading != blank
        or section.settings.text != blank
        or section.settings.button_label != blank
      -%}
        {%- assign show_overlay_text = true -%}
      {%- endif -%}

      {%- if show_overlay_text -%}
        <div
          class="overlay-type overlay {{ section.settings.overlay_position }}"
          data-cc-animate-delay=".5s"
          data-cc-animate="cc-fade-in-up"
        >
          <div class="inner">
            <div>
              <div class="overlay__content">
                {%- if section.settings.title != blank -%}
                  <{{ heading_tag }} class="line-1{% if section.settings.title_size_desktop >= 86 %} line-1--large{% endif %}">
                    {%- if section.settings.preheading != blank -%}
                      <span class="hero-video__preheading">{{ section.settings.preheading }}</span>
                    {%- endif -%}
                    {{ section.settings.title | newline_to_br }}
                  </{{ heading_tag }}>
                {%- endif -%}

                {%- if section.settings.subheading_position == 'overlay' -%}
                  {%- if section.settings.text != blank -%}
                    <div class="rte line-2">
                      {{ section.settings.text }}
                    </div>
                  {%- endif -%}
                  {%- if section.settings.button_label != blank -%}
                    <div class="line-3">
                      <a
                        data-cc-animate-click
                        class="button hover-grow {% if section.settings.button_arrowless %}button--arrowless{% endif %}"
                        href="{{ section.settings.button_link }}"
                      >
                        {{ section.settings.button_label | escape }}
                      </a>
                    </div>
                  {%- endif -%}
                {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endif -%}
    </div>
  {% endif %}

  {%- if section.settings.subheading_position == 'bottom' -%}
    {%- assign wave_section_id = section.id | append: '-bottom' -%}
    {%- if section.settings.bottom_wave != 'none' -%}
      {%- render 'wave-styles',
        wave_position: section.settings.bottom_wave,
        section_id: wave_section_id,
        fill_color: section.settings.bottom_bg
      -%}
    {%- endif -%}
    <div class="section-id-{{ wave_section_id }} hero-video__footer">
      {%- if section.settings.text != blank -%}
        <div class="rte line-2">
          {{ section.settings.text }}
        </div>
      {%- endif -%}
      {%- if section.settings.button_label != blank -%}
        <div class="line-3">
          <a
            data-cc-animate-click
            class="button hover-grow {% if section.settings.button_arrowless %}button--arrowless{% endif %}"
            href="{{ section.settings.button_link }}"
          >
            {{ section.settings.button_label | escape }}
          </a>
        </div>
      {%- endif -%}
    </div>
  {%- endif -%}
</div>

{% schema %}
{
  "name": "Hero Background Video",
  "class": "section-background-video",
  "settings": [
    {
      "type": "paragraph",
      "content": "Background videos are designed to autoplay and be silent. If you want a video with sound use the Video section. Please read documentation before using. [Read more](https://cleancanvas.co.uk/support/general/background-video)"
    },
    {
      "id": "video",
      "type": "text",
      "label": "Desktop Video link",
      "info": "Supports mp4, YouTube and Vimeo.",
      "default": "https:\/\/www.youtube.com\/watch?v=_9VUPq3SxOc"
    },
    {
      "id": "video_file",
      "type": "video",
      "label": "Desktop Video",
      "info": "Shopify-hosted video"
    },
    {
      "id": "placeholder_image",
      "type": "image_picker",
      "label": "Placeholder image",
      "info": "Required. Shows while the video is loading, or if it cannot autoplay."
    },
    {
      "id": "mobile_video_file",
      "type": "video",
      "label": "Mobile Video",
      "info": "Only mp4 videos will play on mobile. If left blank the desktop video will load."
    },
    {
      "type": "text",
      "id": "preheading",
      "label": "Preheading text",
      "default": "Introducing"
    },
    {
      "id": "preheading_text_color",
      "type": "color",
      "label": "Preheading color"
    },
    {
      "type": "range",
      "id": "preheading_size_mobile",
      "min": 10,
      "max": 72,
      "step": 1,
      "unit": "px",
      "label": "Preheading text size (mobile)",
      "default": 18
    },
    {
      "type": "range",
      "id": "preheading_size_desktop",
      "min": 10,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Preheading text size (desktop)",
      "default": 24
    },
    {
      "type": "textarea",
      "id": "title",
      "label": "Heading",
      "default": "Tell your story"
    },
    {
      "id": "heading_text_color",
      "type": "color",
      "label": "Heading color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "title_size_mobile",
      "min": 16,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Heading text size (mobile)",
      "default": 28
    },
    {
      "type": "range",
      "id": "title_size_desktop",
      "min": 16,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Heading text size (desktop)",
      "default": 40
    },
    {
      "type": "checkbox",
      "id": "heading_h1",
      "label": "Set as primary page heading",
      "info": "Uses <h1> tag. One per page recommended. [Learn more](https://cleancanvas.co.uk/support/showcase/seo#inner-anchor-0)",
      "default": false
    },
    {
      "type": "select",
      "id": "subheading_position",
      "label": "Subheading content position",
      "options": [
        {
          "value": "overlay",
          "label": "Below heading (overlay)"
        },
        {
          "value": "bottom",
          "label": "Below video (wave)"
        }
      ],
      "default": "bottom"
    },
    {
      "type": "select",
      "id": "bottom_wave",
      "label": "Wave below video",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "both",
          "label": "Both"
        }
      ],
      "default": "none"
    },
    {
      "id": "bottom_bg",
      "type": "color",
      "label": "Bottom background color",
      "default": "#fcf2e0"
    },
    {
      "type": "range",
      "id": "text_size_mobile",
      "min": 16,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Text size (mobile)",
      "default": 28
    },
    {
      "type": "range",
      "id": "text_size_desktop",
      "min": 16,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Text size (desktop)",
      "default": 36
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text",
      "default": "<p>with auto-playing, auto-looping videos</p>"
    },
    {
      "type": "number",
      "id": "text_max_width_mobile",
      "label": "Text maximum width (mobile) in px",
      "default": 384
    },
    {
      "type": "number",
      "id": "text_max_width_desktop",
      "label": "Text maximum width (desktop)",
      "default": 384
    },
    {
      "type": "checkbox",
      "id": "enlarge_text",
      "label": "Enlarge text",
      "default": false
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "checkbox",
      "id": "button_arrowless",
      "label": "Button: hide arrow?",
      "default": true
    },
    {
      "type": "text",
      "id": "reviews_banner_text",
      "label": "Reviews banner text",
      "default": "6,000+ 5-Star Reviews"
    },
    {
      "id": "reviews_banner_background_color",
      "type": "color",
      "label": "Reviews banner background color",
      "default": "#FFE660"
    },
    {
      "id": "reviews_banner_text_color",
      "type": "color",
      "label": "Text color",
      "default": "#36409A"
    },
    {
      "type": "select",
      "id": "overlay_position",
      "label": "Text alignment",
      "options": [
        {
          "value": "position--left position--top",
          "label": "Top left"
        },
        {
          "value": "position--hcenter position--top",
          "label": "Top center"
        },
        {
          "value": "position--right position--top",
          "label": "Top right"
        },
        {
          "value": "position--left position--vcenter",
          "label": "Middle left"
        },
        {
          "value": "position--hcenter position--vcenter",
          "label": "Middle center"
        },
        {
          "value": "position--right position--vcenter",
          "label": "Middle right"
        },
        {
          "value": "position--left position--bottom",
          "label": "Bottom left"
        },
        {
          "value": "position--hcenter position--bottom",
          "label": "Bottom center"
        },
        {
          "value": "position--right position--bottom",
          "label": "Bottom right"
        }
      ],
      "default": "position--hcenter position--vcenter"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "radio",
      "id": "height",
      "label": "Video height",
      "default": "responsive",
      "options": [
        {
          "value": "full",
          "label": "Full screen"
        },
        {
          "value": "fixed",
          "label": "Fixed height"
        },
        {
          "value": "responsive",
          "label": "Responsive (ratio)"
        }
      ]
    },
    {
      "type": "range",
      "id": "height_desktop",
      "min": 200,
      "max": 1000,
      "step": 20,
      "unit": "px",
      "label": "Desktop fixed height",
      "default": 600
    },
    {
      "type": "range",
      "id": "height_mobile",
      "min": 100,
      "max": 1000,
      "step": 20,
      "unit": "px",
      "label": "Mobile fixed height",
      "default": 500
    },
    {
      "type": "number",
      "id": "video_aspect_ratio_mobile",
      "label": "Mobile video aspect ratio (%)",
      "info": "If 'Responsive' is selected, the video size grows based on this aspect ratio.",
      "default": 100
    },
    {
      "type": "number",
      "id": "video_aspect_ratio_desktop",
      "label": "Desktop video aspect ratio (%)",
      "info": "If 'Responsive' is selected, the video size grows based on this aspect ratio.",
      "default": 170
    },
    {
      "type": "text",
      "id": "video_max_height_mobile",
      "label": "Mobile video maximum height",
      "info": "Applies when 'Responsive' is selected. Use CSS, like \"600px\" or \"50vh\""
    },
    {
      "type": "text",
      "id": "video_max_height_desktop",
      "label": "Desktop video maximum height",
      "info": "Applies when 'Responsive' is selected. Use CSS, like \"600px\" or \"50vh\""
    },
    {
      "id": "overlay_header",
      "type": "checkbox",
      "label": "Overlay header?",
      "default": true
    },
    {
      "id": "overlay_style_tint",
      "type": "checkbox",
      "label": "Show overlay tint",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Hero video",
      "settings": {}
    }
  ]
}
{% endschema %}
