<!DOCTYPE html>
  <html lang="{{ locale }}" dir="{{ direction }}" class="{{ checkout_html_classes }}">
    <head>
      <script src="https://cdn.intelligems.io/ff782cb0b775.js"></script>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
      <meta name="referrer" content="origin">
  
      <title>{{ page_title }}
      </title>
    </head>
    <body>
      <style>
        .order-summary__sections::before {
          content: "77-day Trial Guarantee + Free Return Shipping";
          text-align: center;
          width: 100%;
          display: block;
          margin-top: 15px;
          background: rgb(54, 64, 154);
          color: white;
          padding: 10px 0;
          margin-bottom: 10px;
        }

        .dtc-checkout-reviews__desktop, .dtc-checkout-reviews__mobile, .dtc-checkout-return-info{
          display: none;
        }
      </style>
      {{ content_for_header }}
  
      {{ checkout_stylesheets }}
      {{ checkout_scripts }}

      {{ skip_to_content_link }}

      {{ checkout.step }}
  
      <header class="banner" data-header="" role="banner">
        <div class="wrap">
          {{ content_for_logo }}
        </div>
      </header>
      {% render 'dtc-checkout-return-info' %}
      {{ order_summary_toggle }}
      <div class="content" data-content="">
        <div class="wrap">
          <div class="main">
            <header class="main__header" role="banner">
              {{ content_for_logo }}
              {{ breadcrumb }}
              {{ alternative_payment_methods }}
            </header>
            <main class="main__content" role="main">
              {{ content_for_layout }}
              <div class="dtc-checkout-reviews__mobile">
                {% render 'dtc-checkout-reviews' %}
              </div>
            </main>
            <footer class="main__footer" role="contentinfo">
              {{ content_for_footer }}
            </footer>
          </div>
          <aside class="sidebar" role="complementary">
            <div class="sidebar__header">
              {{ content_for_logo }}
            </div>
            <div class="sidebar__content">
              {{ content_for_order_summary }}
              <div class="dtc-checkout-reviews__desktop">
                {% render 'dtc-checkout-reviews' %}
              </div>
            </div>
          </aside>
        </div>
      </div>
      {{ tracking_code }}
  
      <script>
        // shim layer with setTimeout fallback
        const requestAnimFrame = (function() {
          return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
            window.setTimeout(callback, 3000 / 60);
          };
        })();
  
        function waitUntil(test) {
          return new Promise(function(resolve) {
            (function poll() {
              if (! test()) 
                return requestAnimFrame(poll, 50);
              
              return resolve();
            })();
          });
        };
  
        const observeSelector = (selector, callback, options = { timeout: null, once: false, onTimeout: null, document: window.document })=>{
          let processed = new Map();
        
          if (options.timeout || options.onTimeout){
            console.log('------------------------------------------------------------------------------------------------------------------------------');
            console.log('WARNING: observeSelector options timeout and onTimeout are not yet implemented.');
            console.log('------------------------------------------------------------------------------------------------------------------------------');
          }
        
          let obs, isDone = false;
          const done = ()=>{
            if (!obs) console.warn('observeSelector failed to run done()');
            if (obs) obs.disconnect();
            processed = undefined;
            obs = undefined;
            return isDone = true;
          };
        
          const processElement = el=>{
            if (processed && !processed.has(el)) {
              processed.set(el, true);
              callback(el);
              if (options.once){
                done();
                return true;
              }
            }
          };
        
          const lookForSelector = (el = document) => {
            if (el.matches && el.matches(selector)){
              if (processElement(el)) return true;
            }
            if (el.querySelectorAll){
              const elements = el.querySelectorAll(selector);
              if (elements.length) {
                for (let i = 0; i < elements.length; i++) {
                  const el = elements[i];
                  if (processElement(el)) return true;
                }
              }
            }
          };
          lookForSelector();
        
          //We might finish before the mutation observer is necessary:
          if (!isDone){
            obs = new MutationObserver(mutationsList => {
              mutationsList.forEach(record=>{
                if (record && record.addedNodes && record.addedNodes.length){
                  for (let i = 0; i < record.addedNodes.length; i++) {
                    //Need to check from the parent element since sibling selectors can be thrown off if elements show up in non-sequential order
                    const el = record.addedNodes[i].parentElement;
                    // if (!el) console.warn('observeSelector element has no parent', record.addedNodes[i], record);
                    //Note: This appears to also run when elements are removed from the DOM. If the element doesn't have a parent then we don't need to check it.
                    if (el && lookForSelector(el)) return true;
                  }
                }
              });
            });
            obs.observe(options.document || document, {
              attributes: false,
              childList: true,
              subtree: true
            });
          }
        
          return ()=>{
            done();
          };
        }; //_observeSelector
    
        // JMBY-73
        waitUntil(() => {
          return document.querySelectorAll('input#checkout_buyer_accepts_marketing').length > 0 && document.querySelectorAll('input#ps_accepts_sms').length > 0;
        }).then(() => {
          let step1_form = document.querySelector('input#checkout_buyer_accepts_marketing').closest('form');
          step1_form.addEventListener("submit", () => {
            if(document.querySelector('input#checkout_buyer_accepts_marketing').checked){
              ga('send', 'event', 'CRO', `Checkout Step 1 Submit`, 'Accept Marketing');      
            } else {
              ga('send', 'event', 'CRO', `Checkout Step 1 Submit`, 'Decline Marketing');      
            }
            if(document.querySelector('input#ps_accepts_sms').checked){
              ga('send', 'event', 'CRO', `Checkout Step 1 Submit`, 'Accept SMS');    
            } else {
              ga('send', 'event', 'CRO', `Checkout Step 1 Submit`, 'Decline SMS');      
            }
          });
        }).catch();

        
      </script>
    </body>
  </html>