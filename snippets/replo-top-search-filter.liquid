{% comment %}
  Render search facets (filtering and sorting for collections/search results)
  
  Accepts:
  - mode: {String} 'collection' or 'search'
  - results: {Object} Collection or Search object
  - section: {Object} The section objects with settings galore
  - current_sort_by: {String} The value of the current sort
{% endcomment %}

{%- liquid  
  if mode == "collection"
    assign translation_sort_title = 'collections.sorting.title' | t
    assign translation_submit_button = 'collections.filtering.submit' | t
    assign translation_close = 'collections.filtering.mobile_close' | t
    assign translation_open = 'Filter'
    assign translation_show_results = 'collections.filtering.show_results' | t
    assign translation_show_results_singular = 'collections.filtering.show_results_singular' | t
    assign translation_clear_all = 'collections.filtering.clear_all' | t
    assign translation_no_matches = 'collections.general.no_matches' | t
  elsif mode == "search"
    assign translation_sort_title = 'general.search.sort_title' | t
    assign translation_submit_button = 'general.search.submit' | t
    assign translation_close = 'general.search.filtering.mobile_close' | t
    assign translation_open = 'Filter'
    assign translation_show_results = 'general.search.filtering.show_results' | t
    assign translation_show_results_singular = 'general.search.filtering.show_results_singular' | t
    assign translation_clear_all = 'general.search.filtering.clear_all' | t
    assign translation_no_matches = 'general.search.no_results_title' | t
  endif

  if results.results_count
    assign results_count = results.results_count
  elsif results.products_count
    assign results_count = results.products_count
  endif

%}

results.filters : {{ results.filters | json }}

{%- liquid  
  assign show_filters = false
  for filter in results.filters
    case filter.type
      when "list"
        for value in filter.values
          if value.count > 0
            assign show_filters = true
            break
          endif
        endfor
      when "price_range"
        assign show_filters = true
        break
    endcase

    if show_filters
      break
    endif
  endfor
-%}

{% capture form_hidden_fields %}
  {% if mode == "collection" %}
    {%- comment -%}
      Preserve automatic vendor/type collections & sorting
    {%- endcomment -%}
    {%- if collection.current_vendor or collection.current_type -%}
      <input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
    {%- endif -%}
  {%- elsif mode == "search" -%}
  
    <input type="hidden" name="type" value="{{ settings.search_type }}" />
    <input type="hidden" name="options[prefix]" value="last" />
    <input type="hidden" name="q" value="{{ results.terms | escape }}" />
  {%- endif -%}


{% endcapture %}

{% if section.settings.filter_mode == "simple" or section.settings.filter_mode == "none" %}
  <div  class="wide-container filter{% if mode == "collection" and section.settings.show_collection_image == false and section.settings.show_collection_content == false %} mt-0{% endif %}"
    data-cc-animate data-cc-animate-delay="0.7s">
    <form id="FacetsForm" data-ajax-container>
      {%- if show_filters -%}
        {% if section.settings.filter_mode == "simple" %}
          {%- for filter in results.filters -%}
            {%- assign num_available_options = 0 -%}

            {%- case filter.type -%}
              {%- when "list" -%}
                {% capture option %}
                  <div class="option">
                    <label for="filter-by-{{ filter.label | handle }}">{{ filter.label }}</label>
                    <select id="filter-by-{{ filter.label | handle }}" name="{{ filter.values.first.param_name }}">
                      <option value="">{{ 'collections.filtering.all' | t }}</option>
                      {%- for value in filter.values -%}
                        {%- if value.count > 0 or section.settings.show_filter_deadends %}
                          {%- assign num_available_options = num_available_options | plus: 1 -%}
                          <option value="{{ value.value | escape }}" {% if value.active %}selected{% endif %} {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                            {{ value.label }}{% if section.settings.show_filter_counts %} ({{ value.count }}){% endif %}
                          </option>
                        {%- endif -%}
                      {%- endfor -%}
                    </select>
                  </div>
                {% endcapture %}
                {%- if num_available_options > 0 or section.settings.show_filter_deadends -%}
                  {{ option }}
                {% endif %}
              {%- when "price_range" -%}
                {% comment %}{% render 'price-range', filter: filter %}{% endcomment %}

            {%- endcase -%}
          {%- endfor -%}
        {% endif %}

        {%- if section.settings.enable_sorting -%}
          <div class="option">
            <label for="filter-by-sort-by">{{ translation_sort_title }}</label>
            <select id="filter-by-sort-by" name="sort_by">
              {%- for option in results.sort_options -%}
                {%- if option.value == "manual" and section.settings.show_featured_in_sort -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
                    {{ option.name | escape }}
                  </option>
                {%- elsif option.value != "manual" -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
                    {{ option.name | escape }}
                  </option>
                {%- endif -%}
              {%- endfor -%}
            </select>
          </div>
        {% endif %}
      {%- endif -%}

      {{ form_hidden_fields }}

      <noscript>
        <button type="submit" class="btn">{{ translation_submit_button }}</button>
      </noscript>
    </form>
  </div>
{% endif %}

  <!---div data-cc-animate data-cc-animate-delay="0.7s">
    <div class="wide-container half-gutter cc-product-filter-container" data-ajax-container data-ajax-scroll-to>
        <div class="cc-product-filter cc-product-filter--sticky-{{ section.settings.sticky_sidebar }} {% if section.settings.sticky_sidebar %}cc-sticky-scroll-direction{% endif %}">
          <form id="FacetsForm">
              {%- capture filter_content -%}
                <ul class="cc-product-filter__sort-by">
                  {%- for option in results.sort_options -%}
                    {%- if option.value == "manual" and section.settings.show_featured_in_sort -%}
                      <label class="cc-checkbox sort-{{ option.name | handle }}">
                        <input class="cc-checkbox__input"
                              type="radio"
                              name="sort_by"
                              value="{{ option.value | escape }}"
                              {% if option.value == current_sort_by %}checked{% endif %}
                        >
                        <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                      </label>
                    {%- elsif option.value != "manual" -%}
                      <label class="cc-checkbox sort-{{ option.name | handle }}">
                        <input class="cc-checkbox__input"
                              type="radio"
                              name="sort_by"
                              value="{{ option.value | escape }}"
                              {% if option.value == current_sort_by %}checked{% endif %}
                        >
                        <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                      </label>
                    {%- endif -%}
                  {%- endfor -%}
                </ul>
              {%- endcapture -%}
              {{ filter_content }}

              {{current_sort_by }}

            {{ form_hidden_fields }}

            <noscript>
              <button type="submit" class="btn">{{ translation_submit_button }}</button>
            </noscript>
          </form>
        </div>

    </div>
  </div-->

<div data-cc-animate data-cc-animate-delay="0.7s">
  <div class="dtc-collection-name mobile">
    {% if section.settings.show_collection_content %}
      {% if collection.description != blank %}
        <h1 class="line-1 feature-header" data-cc-animate>{{ collection.title }}</h1>
        {% if section.settings.description_position == "top" %}
          <div class="line-2 rte" data-cc-animate data-cc-animate-delay="0.2s">
            {{ collection.description }}
          </div>
        {% endif %}
      {% else %}
        <h1 class="line-1 feature-header no-margin" data-cc-animate>{{ collection.title }}</h1>
      {% endif %}
    {% endif %}
  </div>

  <div class="wide-container half-gutter cc-product-filter-container
        {% if section.settings.filter_mode == "simple" or section.settings.filter_mode == "none" %}pt-0{% endif %}
        {% if mode == "collection" and section.settings.show_collection_image == false and section.settings.show_collection_content == false %}pt-0{% endif %}" data-ajax-container data-ajax-scroll-to>

    {% if section.settings.filter_mode == "sidebar" and show_filters == true %}
      <div class="footer-button-xs sorting-filtering-container">
        <span style="display:none" class="icon-control-dom">
            {% render "icon-control" %} {{ translation_open }}
        </span>
        <button class="button no-hover" data-show-filter
                data-close-text="{{ translation_close }}"
                data-result-count-text="{{ translation_show_results }}"
                data-result-count-text-singular="{{ translation_show_results_singular }}">
          {% render "icon-control" %} {{ translation_open }}
        </button>

        <span style="display:none" class="icon-control-dom">
          {% render "icon-control" %} {{ translation_open }}
      </span>
      <button class="button no-hover" data-show-sorting
              data-close-text="Close Sorting"
              data-result-count-text="Show [x] results"
              data-result-count-text-singular="Show result">
              <img src="https://cdn.shopify.com/s/files/1/0090/4128/1109/files/Vector_5b5def99-c229-46e2-98c5-904a84a99704.svg?v=1702322290" width="22" height="22" loading="eager" fetchpriority="high"> Sort
      </button>
      </div>


      <div class="y cc-product-filter cc-product-filter--sticky-{{ section.settings.sticky_sidebar }} {% if section.settings.sticky_sidebar %}cc-sticky-scroll-direction{% endif %}">
        <div class="dtc-collection-name">
          {% if section.settings.show_collection_content %}
            {% if collection.description != blank %}
              <h1 class="line-1 feature-header" data-cc-animate>{{ collection.title }}</h1>
              {% if section.settings.description_position == "top" %}
                <div class="line-2 rte" data-cc-animate data-cc-animate-delay="0.2s">
                  {{ collection.description }}
                </div>
              {% endif %}
            {% else %}
              <h1 class="line-1 feature-header no-margin" data-cc-animate>{{ collection.title }}</h1>
            {% endif %}
          {% endif %}
        </div>
        
        <div class="footer-button-xs top-filter">
            <span style="display:none" class="icon-control-dom">
                {% render "icon-control" %} {{ translation_open }}
            </span>
            <button class="button no-hover" data-show-filter
                    data-close-text="{{ translation_close }}"
                    data-result-count-text="{{ translation_show_results }}"
                    data-result-count-text-singular="{{ translation_show_results_singular }}">
                {% render "icon-control" %} {{ translation_open }}
            </button>
        </div>
        
        <form id="FacetsForm">
          {%- for filter in results.filters -%}
            {%- if filter.label == "Color" or filter.label == "Product type"-%}
              {%- continue -%}
            {%- endif -%}

            {% assign is_open = false %}
            {%- if filter.label contains "Color" or filter.label contains "Size" or filter.label == "Product Type Filter" -%}
              {% assign is_open = false %}
            {%- endif -%}

            {%- liquid
              if filter.label contains "General" or settings.swatch_enabled and settings.swatch_option_name == filter.label and filter.type == "list"
                assign filter_group_is_swatch = true
              else
                assign filter_group_is_swatch = false
              endif

              if section.settings.collapse_filters_method == 'all'
                assign filter_is_open = false
              elsif section.settings.collapse_filters_method == 'none'
                assign filter_is_open = true
              elsif section.settings.collapse_filters_method contains 'over-'
                assign limit = section.settings.collapse_filters_method | split: '-' | last | plus: 0
                if filter.values.size > limit
                  assign filter_is_open = false
                else
                  assign filter_is_open = true
                endif
              endif

              assign filter_title = filter.label | escape
              assign num_available_options = 0
            -%}

            {%- capture filter_content -%}
              {%- case filter.type -%}
                {%- when "list" -%}
                  {%- if filter_group_is_swatch -%}
                    <ul class="cc-swatches">
                      {%- for value in filter.values -%}
                        {%- if value.count > 0 or section.settings.show_filter_deadends %}
                          {%- assign num_available_options = num_available_options | plus: 1 -%}
                          <li data-tag="{{ value.label | handle }}">
                            <label class="cc-checkbox{% if value.active %} active{% endif %}{% if value.count == 0 and value.active == false %} disabled{% endif %}"
                                    title="{{ value.label | escape }}">
                              <input class="cc-checkbox__input"
                                      id="Filter-{{ value.param_name }}-{{ value.value | handle }}"
                                      type="checkbox"
                                      name="{{ value.param_name }}"
                                      value="{{ value.value | escape }}"
                                      {% if filter.label contains "General" %}data-general="{{ value.value | escape }}"{% endif %}
                                      {% if value.active %}checked{% endif %}
                                {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                            </label>
                          </li>
                        {%- endif -%}
                      {%- endfor -%}
                    </ul>
                  {%- else -%}
                    {%- for value in filter.values -%}
                      {% if value.value == "Gift Cards" %}
                        {% continue %}
                      {% endif %}
                      {% assign product_type_icon = '' %}
                      {% assign is_color = false %}

                      {% for icon in icons %}
                        {% if icon.settings.product_type == value.value %}
                          {% assign product_type_icon = icon.settings.filter_icon_img %}
                          {% break %}
                        {% endif %}
                      {% endfor %}

                      {% if value.param_name contains 'color' %}
                        {% assign is_color = true %}
                      {% endif %}

                      {%- if value.count > 0 or section.settings.show_filter_deadends %}
                        {%- assign num_available_options = num_available_options | plus: 1 -%}
                        <label class="cc-checkbox{% if product_type_icon != '' %} has-icon{% endif %}{% if is_color %} is-color{% endif %} {{ value.label | downcase | escape | replace: " ", "-"}}">

                          {% if is_color %}
                          {% comment %}
                          {% render 'color-swatches', value: value.value %}
                          {% endcomment %}
                          {% endif %}
                          <input class="cc-checkbox__input"
                                  id="Filter-{{ value.param_name }}-{{ value.value | handle }}"
                                  type="checkbox"
                                  name="{{ value.param_name }}"
                                  value="{{ value.value | escape }}"
                                  {% if value.active %}checked{% endif %}
                            {% if value.count == 0 and value.active == false %}disabled{% endif %}>

                          <span class="cc-checkbox__label">
                            {% if product_type_icon != '' %}
                              <img class="product-type-filter-icon" src="{{ product_type_icon | img_url }}" loading="lazy">
                            {% endif %}
                            {{ value.label | escape }} 
                          </span>

                          {% if section.settings.show_filter_counts %}
                            <span class="cc-checkbox__count">{{ value.count }}</span>
                          {% endif %}
                        </label>
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endif -%}

                {%- when "price_range" -%}
                  {%- assign num_available_options = 1 -%}
                  {% render 'price-range', filter: filter %}

              {%- endcase -%}
            {%- endcapture -%}

            {%- if num_available_options > 0 or section.settings.show_filter_deadends -%}
              {% if filter.label == "Product Type Filter" %}
                {%- render "accordion",
                  filter_label: "Product Type Filter",
                  is_open: is_open,
                  first_item_open: filter_is_open, 
                  item1_title: "Product Type", 
                  item1_content: filter_content -%}
              {% else %}
                {%- render "accordion",
                filter_label: filter.label,
                is_open: is_open,
                first_item_open: filter_is_open, 
                item1_title: filter_title, 
                item1_content: filter_content -%}
              {% endif %}
            {%- endif -%}
          {%- endfor -%}

          {%- if section.settings.enable_sorting -%}
            {%- liquid
              assign filter_title = translation_sort_title

              if section.settings.collapse_sort_by == true
                assign filter_is_open = false
              else
                assign filter_is_open = true
              endif
            -%}

            {%- capture filter_content -%}
              <ul class="cc-product-filter__sort-by">
                {%- for option in results.sort_options -%}
                  {%- if option.value == "manual" and section.settings.show_featured_in_sort -%}
                    <label class="cc-checkbox sort-{{ option.name | handle }}">
                      <input class="cc-checkbox__input"
                             type="radio"
                             name="sort_by"
                             value="{{ option.value | escape }}"
                             {% if option.value == current_sort_by %}checked{% endif %}
                      >
                      <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                    </label>
                  {%- elsif option.value != "manual" -%}
                    <label class="cc-checkbox sort-{{ option.name | handle }}">
                      <input class="cc-checkbox__input"
                             type="radio"
                             name="sort_by"
                             value="{{ option.value | escape }}"
                             {% if option.value == current_sort_by %}checked{% endif %}
                      >
                      <span class="cc-checkbox__label">{{ option.name | escape }}</span>
                    </label>
                  {%- endif -%}
                {%- endfor -%}
              </ul>
            {%- endcapture -%}

            {%- render "accordion",
              filter_label: filter.label,
              is_open: is_open,
              first_item_open: filter_is_open, 
              item1_title: filter_title, 
              item1_content: filter_content -%}
          {% endif %}

          {{ form_hidden_fields }}
          <input type="hidden" name="sort_by" id="my-input-value" value="{{ current_sort_by }}">

          <noscript>
            <button type="submit" class="btn">{{ translation_submit_button }}</button>
          </noscript>
        </form>
      </div>
      <div class="x cc-product-filter cc-product-filter--sticky-{{ section.settings.sticky_sidebar }} {% if section.settings.sticky_sidebar %}cc-sticky-scroll-direction{% endif %}">
        <div class="footer-button-xs top-filter">
            <span style="display:none" class="icon-control-dom">
              <img src="https://cdn.shopify.com/s/files/1/0090/4128/1109/files/Vector_5b5def99-c229-46e2-98c5-904a84a99704.svg?v=1702322290" width="22" height="22" loading="eager" fetchpriority="high"> Sort
            </span>
            <button class="button no-hover" data-show-sorting
                    data-close-text="Close Sorting"
                    data-result-count-text="Show [x] results"
                    data-result-count-text-singular="Show [x] result">
                    Close Sorting
            </button>
        </div>
        
        {%- capture filter_content2 -%}
        {%- for option in results.sort_options -%}
          {%- if option.value == "title-ascending" or  option.value == "title-descending" or option.value == "created-ascending" or option.value == "best-selling"-%}
            {% continue %}
          {%- elsif option.value == "manual" -%}
            <div class="item-radio-sorting">
              <input class="cc-checkbox-sort mine mobile-sorting"
                     type="radio"
                     name="sort_by_mobile"
                     value={{ option.value }}
                     id="{{ option.value }}-mobile"
                     {% if option.value == current_sort_by %}checked{% endif %}
              >
              <label class="label-sorting-value" for="{{ option.value }}-mobile">{{ option.name | escape }}</label>
            </div>
          {%- elsif option.value != "manual" -%}
            <div class="item-radio-sorting">
              <input class="cc-checkbox-sort mine mobile-sorting"
                     type="radio"
                     name="sort_by_mobile"
                     value="{{ option.value | escape }}"
                     id="{{ option.value }}-mobile"
                     {% if option.value == current_sort_by %}checked{% endif %}
              >
              <label class="label-sorting-value" for="{{ option.value }}-mobile">
                {% if option.value == "title-ascending" %}
                  A - Z
                {% elsif option.value == "title-descending" %}
                  Z - A
                {% elsif option.value == "price-ascending" %}
                  Price Low to High
                {% elsif option.value == "price-descending" %}
                  Price High to Low
                {% elsif option.value == "created-ascending" %}
                  Oldest
                {% elsif option.value == "created-descending" %}
                  Newest
                {% elsif option.value == "best-selling" %}
                  Best Selling
                {% endif %}
              </label>
            </div>
          {%- endif -%}
        {%- endfor -%}
      {%- endcapture -%}
        {{filter_content2 }}
      </div>

    {% endif %}

    <div class="product-list-container{% if section.settings.filter_mode == "sidebar" and show_filters == true %} product-list-container--with-sidebar{% endif %}" data-infinite-scroll-container>
      <div class="dtc-collection-results">
        {%- capture filter_content2 -%} 
          {%- for option in results.sort_options -%}
            {%- if option.value == "title-ascending" or  option.value == "title-descending" or option.value == "created-ascending" or option.value == "best-selling"-%}
              {% continue %}
            {%- elsif option.value == "manual" -%}
              <div class="item-radio-sorting">
                <input class="cc-checkbox-sort mine desktop-sorting"
                      type="radio"
                      name="sort_by_desktop"
                      value={{ option.value }}
                      id={{ option.value }}
                      {% if option.value == current_sort_by %}checked{% endif %}
                >
                <label class="label-sorting-value" for="{{ option.value }}">{{ option.name | escape }}</label>
              </div>
            {%- elsif option.value != "manual" -%}
              <div class="item-radio-sorting">
                <input class="cc-checkbox-sort mine desktop-sorting"
                      type="radio"
                      name="sort_by_desktop"
                      value="{{ option.value | escape }}"
                      id={{ option.value }}
                      {% if option.value == current_sort_by %}checked{% endif %}
                >
                <label class="label-sorting-value" for="{{ option.value }}">
                  {% if option.value == "title-ascending" %}
                    A - Z
                  {% elsif option.value == "title-descending" %}
                    Z - A
                  {% elsif option.value == "price-ascending" %}
                    Price Low to High
                  {% elsif option.value == "price-descending" %}
                    Price High to Low
                  {% elsif option.value == "created-ascending" %}
                    Oldest
                  {% elsif option.value == "created-descending" %}
                    Newest
                  {% elsif option.value == "best-selling" %}
                    Best Selling
                  {% endif %}
                </label>
              </div>
            {%- endif -%}
          {%- endfor -%}
        {%- endcapture -%}

        <div class="sort-container">
          <div class="sort-item" id="sort-item">
            <img src="https://cdn.shopify.com/s/files/1/0090/4128/1109/files/Vector_5b5def99-c229-46e2-98c5-904a84a99704.svg?v=1702322290" width="22" height="22" loading="eager" fetchpriority="high">
            <div>
              Sort
            </div>
          </div>
        </div>
        
        <div class="sort-item-child" id="sort-item-child">{{filter_content2 }}</div>
      </div>
      
      {% capture active_filters_html %}
        <div class="active-filter-controls-container">
          <ul class="active-filter-controls">
            <li class="active-filter-controls__clear-left">
              <a href="{{ results_url }}" class="active-filter-controls__clear">
                {{ translation_clear_all }}
              </a>
            </li>

            {%- for filter in results.filters -%}
              {%- for value in filter.active_values -%}
                <li>
                  <a href="{{ value.url_to_remove }}" class="active-filter-controls__tag" data-active-tag="{{ value | escape }}">
                    {{ value.label | escape }}
                  </a>
                </li>
              {%- endfor -%}

              {% if filter.type == "price_range" %}
                {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                  <li>
                    <a href="{{ filter.url_to_remove }}" class="active-filter-controls__tag" data-active-tag="{{ filter | escape }}">
                      {%-if filter.min_value.value %}{%- render "price", price: filter.min_value.value -%}{%- else -%}{%- render "price", price: 0 -%}{%- endif -%}&nbsp;-&nbsp;{%- if filter.max_value.value -%}{%- render "price", price: filter.max_value.value -%}{%- else -%}{%- render "price", price: filter.range_max -%}{% endif %}
                    </a>
                  </li>
                {%- endif -%}
              {% endif %}
            {%- endfor -%}

            <li class="active-filter-controls__clear-right">
              <a href="{{ results_url }}" class="active-filter-controls__clear" id="clear-all">
                {{ translation_clear_all }}
              </a>
            </li>
          </ul>
        </div>
      {% endcapture %}
      {%- if active_filters_html contains 'active-filter-controls__tag'-%}
        {{ active_filters_html }}
      {%- endif -%}

      <div class="product-list cf
            product-list--{{ section.settings.layout }}
            {% if section.settings.grid_mobile == '2' %}mob-two-col{% endif %}
            {% if section.settings.layout == 'columns' %}jiggly-split dynamic-col-{{ section.settings.grid }}{% else %}grid--uniform{% endif %}"
           data-result-count="{{ results_count }}"
           data-infinite-scroll-results>

        {% unless results_count > 0 %}
          <h3 class="align-centre no-results">{{ translation_no_matches }}</h3>
        {% endunless %}

        {% if section.settings.layout == 'rows' %}
          {% if section.settings.grid == 2 %}
            {% assign product_class = 'column half' %}
          {% elsif section.settings.grid == 3 %}
            {% assign product_class = 'column third' %}
          {% else %}
            {% assign product_class = 'column quarter' %}
          {% endif %}
        {% endif %}

        {% if mode == "search" %}
          {% for item in results.results %}
            {% if item.featured_media %}
              {% render 'product-block-collection', product: item, product_class: product_class, i: forloop.index, show_vendor: section.settings.show_vendor %}
            {% elsif item.object_type == 'article' %}
               <div class="product-block {{ product_class }} search-result" data-loop-index="{{ forloop.index }}">
                {% render 'article-block',
                        article: item,
                        show_date: settings.blog_show_date,
                        show_author: settings.blog_show_author,
                        image_shape: settings.blog_image_shape,
                        blog_excerpt: settings.blog_excerpt
                %}
              </div>
            {% else %}
              <div class="product-block {{ product_class }} search-result" data-loop-index="{{ forloop.index }}">
                <h3 class="search-result__title"><a data-cc-animate-click href="{{ item.url }}">{{ item.title }}</a></h3>
                <div class="rte">
                  <p>{{ item.content | strip_html | truncatewords: 30 }}</p>
                  <p><a data-cc-animate-click href="{{ item.url }}">{{ 'blogs.article.read_more' | t }} &rarr;</a></p>
                </div>
              </div>
            {% endif %}
             {% if forloop.index == 4 %}
              {% render "product-type-compare", view: "mobile" %}
            {% endif %}
          {% endfor %}
        {% elsif mode == "collection" %}
          {% assign product_index_for_mobile = 5 %}
          {% assign render_left_size = collection.metafields.custom.dtc_objection_handlers | split: ',' | size %}
          {% assign last_rendered_index = 0 %}

          {% for product in results.products %}
            {% comment %} Initialize a variable to track if a match is found {% endcomment %}
            {% assign product_index = forloop.index %}
            {% assign product_index_operator = product_index | modulo: product_index_for_mobile %}

            {% comment %} Loop to handle Desktop portion {% endcomment %}
            {% for obj_handler in collection.metafields.custom.dtc_objection_handlers.value %}
              {% comment %} Check if the current product index matches the position in the metafield and is divisible by 5 {% endcomment %}
              {% if product_index == obj_handler.position %}
                {% render 'objection-handler-block',
                  handler: obj_handler,
                  i: product_index
                %}
              {% endif %}
            {% endfor %}

            {% comment %} Loop to handle Mobile portion {% endcomment %}
            {% for obj_handler in collection.metafields.custom.dtc_objection_handlers.value offset: last_rendered_index %}
              {% if product_index_operator == 0 and render_left_size > 0 %}
                {% render 'objection-handler-block',
                  handler: obj_handler,
                  i: product_index,
                  mobile: true
                %}
                {% assign product_index_operator = 1 %}
                {% assign product_index_for_mobile = product_index_for_mobile | plus: 6 %}
                {% assign last_rendered_index = last_rendered_index | plus: 1 %}
                {% assign render_left_size = render_left_size | minus: 1 %}
                {% break %}
              {% endif %}
            {% endfor %}

            {% render 'product-block-collection', 
              product: product, 
              product_class: product_class, 
              i: forloop.index, 
              show_vendor: section.settings.show_vendor 
            %}

            {% if forloop.index == 4 %}
              {% render "product-type-compare-mobile" %}
            {% endif %}
          {% endfor %}
        {% endif %}
      </div>

      {% comment %}
        Infinite scroll option:

        By default, more products will load in once you scroll to the bottom of the page.

        Change 'false' to 'true' on the line below to prevent this from happening, and instead show a button at the bottom of the page.
        Clicking this button will load in the next batch of products.
      {% endcomment %}

      {% assign show_scroll_button = false %}
      {% if paginate.pages > 1 %}
        <div class="pagination central small-gap-top content {% if section.settings.enable_infinite_scroll %}infiniscroll{% if show_scroll_button %} wait-for-trigger{% endif %}{% endif %}  transparent">
          {{ paginate | default_pagination }}
        </div>
      {% endif %}
    </div>
  </div>
</div>

<script>
  /* var stickyEl = new Sticksy('.footer-button-xs', {
      // topSpacing: 106, // Specify this when you have a fixed top panel
      // listen: true, // Listen for the DOM changes in the container
  })*/

  let containerSort = document.getElementById("sort-item")
  let containerSortChild = document.getElementById("sort-item-child")
  let elementsArray = document.getElementsByClassName("cc-checkbox-sort mine desktop-sorting");
  let elementsArray2 = document.getElementsByClassName("cc-checkbox-sort mine mobile-sorting");

  containerSort.addEventListener("click", function(e){
    if(containerSortChild.classList.contains("active")){
      containerSortChild.classList.remove("active")
    }else{
      containerSortChild.classList.add("active")
    }
  })

  for(let element of elementsArray){
    element.addEventListener("click", function(e) {
      console.log("clicked 1 ",elementsArray)
      document.getElementById("my-input-value").value = element.value;
      let evt = document.createEvent('Event');
      evt.initEvent('change', true, false);
      //document.getElementById("FacetsForm").trigger("change")
      $("#FacetsForm").trigger("change");
    });
  }

  for(let element of elementsArray2){
    element.addEventListener("click", function(e) {
      console.log("clicked 2 ", elementsArray2)
      document.getElementById("my-input-value").value = element.value;
      let evt = document.createEvent('Event');
      evt.initEvent('change', true, false);
      //document.getElementById("FacetsForm").trigger("change")
      
      $("#FacetsForm").trigger("change");
      setTimeout(function() {
        var nav = theme.Nav();
        nav.bar.fadeOut(false);
        $('.x.cc-product-filter').toggleClass('-in');
      }, 3500);
    });
  }

  // Function to remove excess dtc-objection-handler elements
  function removeExcessHandlers() {
    let desktopObjectionHandlers = document.querySelectorAll(".dtc-objection-handler.desktop");
    let mobileObjectionHandlers = document.querySelectorAll(".dtc-objection-handler.mobile");
    
    const renderLeftSize = Number('{{ collection.metafields.custom.dtc_objection_handlers | split: ',' | size }}');

    if(desktopObjectionHandlers.length > 3){
      for(let i = 3; i < desktopObjectionHandlers.length; i++){
        desktopObjectionHandlers[i].remove();
      }
    }
    
    if(mobileObjectionHandlers.length > 3){
      for(let i = 3; i < mobileObjectionHandlers.length; i++){
        mobileObjectionHandlers[i].remove();
      }
    }
  }

  // Create a new MutationObserver
  let observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'childList') {
        for (let i = 0; i < mutation.addedNodes.length; i++) {
          let node = mutation.addedNodes[i];
          if (node.nodeType === Node.ELEMENT_NODE && node.classList.contains('dtc-objection-handler')) {
            removeExcessHandlers();
          }
        }
      }
    });
  });

  // Start observing the document with the configured parameters
  observer.observe(document, { childList: true, subtree: true });
</script>